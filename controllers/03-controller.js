const utils = require("../utils");
/*‚ö†Ô∏è No modificar nada arriba de esta l√≠nea ‚ö†Ô∏è
  3Ô∏è‚É£ ** EJERCICIO 3 ** - updateAnimal 3Ô∏è‚É£:
 
  üü¢ Debes buscar POR ID un animal recibido por par√°metro dentro del array de utils.animal y actualizar las propiedades: peso 
  y altura. Tambi√©n agr√©gale una nueva propiedad llamada "tipoDeDieta".
  üü¢ Si no encuentras el animal debes arrojar un error que diga: "No se encontro el animal solicitado".
  üü¢ Si alguna de las propiedades {peso, altura, tipoDeDieta} del animal que recibimos es undefined, debe arrojar un error que diga: "Faltan 
  datos a completar".
    üì¢ PUNTOS A TENER EN CUENTA üì¢
  1) Recuerda que el mensaje de error deben ser exactamente como lo pide el enunciado.
  2) Recuerda agregar la nueva propiedad "tipoDeDieta", √©sta no se encuentra en examples.json.
  3) Ten en cuenta que propiedades y peso los recibir√°s en el objeto "animal" como n√∫mero, pero deber√°s hacer un ajuste en esas propiedades al modificar el animal
  */

const updateAnimal = (animal) => {
  const values = Object.values(animal)
const undef = values.includes(undefined)
if (undef) {
  throw new Error('Faltan datos a completar')
}
  let anima = utils.animal.filter((ani) => ani.id === animal.id);
  if (anima.length === 0) {
    throw new Error("No se encontro el animal solicitado");
  } else {
    
    ResAnimal= animal.peso +  " " + "Kilos"
    ResAltura= animal.altura + "cm"
  
    anima[0].peso =ResAnimal;
    anima[0].altura =ResAltura;
    anima[0].tipoDeDieta = animal.tipoDeDieta;
    
  }

return anima[0]
};

// ‚ö†Ô∏è No modificar nada debajo de esta l√≠nea ‚ö†Ô∏è
module.exports = updateAnimal;
