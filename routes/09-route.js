const router = require("express").Router();
const updateAnimal = require("../controllers/03-controller");
/* ‚ö†Ô∏è No modificar nada arriba de esta l√≠nea ‚ö†Ô∏è

  9Ô∏è‚É£ ** EJERCICIO 9 ** - PUT /animal 9Ô∏è‚É£:

  üü¢ Integrar la funci√≥n updateAnimal que desarrollaste previamente (Ejercicio 3) para actualizar el animal.
  üìå Responder con un objeto con una propiedad "message" que se igual al string "Animal actualizado correctamente".
  üìå Si hay un error, responder un objeto con una propiedad "error" y que el valor sea el error.message.

    üì¢ PUNTOS A TENER EN CUENTA üì¢
  1) Si algo falla al actualizar el animal, debes responder con el mensaje del error.
  2) Recibir√°s los argumentos necesario para ejecutar esa funci√≥n updateAnimal mediante la propiedad "body" de req.
  3) ¬°Revisa en los test el status que deben tener tus respuestas!

*/

router.put("/animal", (req, res) => {
  const { animal } = req.body
  let animalAct = {
    id: undefined,
    name: undefined,
    edad: undefined,
    peso: undefined,
    altura: undefined,
    tipoDeDieta:undefined
          }
      animalAct = {...animalAct, ...animal}
  try {
    updateAnimal(animalAct);
    res.status(200).json({ message: "Animal actualizado correctamente" });
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
});
//‚ö†Ô∏è No modificar nada debajo de esta l√≠nea ‚ö†Ô∏è
module.exports = router;
